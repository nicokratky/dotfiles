#!/usr/bin/env bash

set -Eeuo pipefail
trap cleanup SIGINT SIGTERM ERR EXIT

script_dir=$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd -P)

usage() {
  cat <<EOF
Usage: $(basename "${BASH_SOURCE[0]}") [-h] [-v] PROJECT TOPIC
Script description here.
Available options:
-h, --help      Print this help and exit
-v, --verbose   Print script debug info
EOF
  exit
}

cleanup() {
  trap - SIGINT SIGTERM ERR EXIT
  # script cleanup here
}

setup_colors() {
  if [[ -t 2 ]] && [[ -z "${NO_COLOR-}" ]] && [[ "${TERM-}" != "dumb" ]]; then
    NOFORMAT='\033[0m' RED='\033[0;31m' GREEN='\033[0;32m' ORANGE='\033[0;33m' BLUE='\033[0;34m' PURPLE='\033[0;35m' CYAN='\033[0;36m' YELLOW='\033[1;33m'
  else
    NOFORMAT='' RED='' GREEN='' ORANGE='' BLUE='' PURPLE='' CYAN='' YELLOW=''
  fi
}

msg() {
  echo >&2 -e "${1-}"
}

die() {
  local msg=$1
  local code=${2-1} # default exit status 1
  msg "$msg"
  exit "$code"
}

parse_params() {
  while :; do
    case "${1-}" in
    -h | --help) usage ;;
    -v | --verbose) set -x ;;
    --no-color) NO_COLOR=1 ;;
    -?*) die "Unknown option: $1" ;;
    *) break ;;
    esac
    shift
  done

  args=("$@")

  # check required params and arguments
  [[ ${#args[@]} -ne 2 ]] && die "Wrong script arguments"

  return 0
}

parse_params "$@"
setup_colors

# script logic here

SECOND_BRAIN="$HOME/Nextcloud/documents/garden"

project=${args[0]}
topic=${args[1]}

current_date=$(date +"%Y%m%d")
timestamp=$(date +"%Y%m%d%H%M")

filename="$current_date-$project-$topic.md"
file="$SECOND_BRAIN/0-inbox/$filename"

touch "$file"

cat << EOF >> $file
# Meeting Minutes $project $topic

## Meeting Information
**Meeting Date/Time**: meeting_date, meeting_time

## Attendees
- Person A
- Person B
- Person C

## Notes



## Action Items
| Done? | Item | Responsible | Due Date |
| ---- | ---- | ---- | ---- |
| | item | who | due_date |

---
## Links
$timestamp
[[$project]]
EOF

nvim "+ normal ggzzi" $file
